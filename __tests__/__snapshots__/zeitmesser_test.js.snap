// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <RNSVGSvgView
        bbHeight="100px"
        bbWidth="100px"
        focusable={false}
        height="100px"
        onPress={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        responsible={true}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "transform": Array [
                Object {
                  "scale": -3,
                },
                Object {
                  "scaleX": -1,
                },
                Object {
                  "rotate": "-90deg",
                },
              ],
            },
            Object {
              "opacity": 1,
            },
            Object {
              "flex": 0,
              "height": 100,
              "width": 100,
            },
          ]
        }
        testID="baseTimerPathSVG"
        width="100px"
      >
        <RNSVGGroup
          fill={4278190080}
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        >
          <RNSVGGroup
            fill={4278190080}
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            opacity={1}
            originX={0}
            originY={0}
            propList={Array []}
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth={1}
            vectorEffect={0}
            x={0}
            y={0}
          >
            <RNSVGCircle
              cx="50"
              cy="50"
              fill={4294967295}
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              r="45"
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth={1}
              vectorEffect={0}
              x={0}
              y={0}
            />
            <RNSVGPath
              d=" M 50, 50 m -45, 0 a 45,45 0 1,0 90,0 a 45,45 0 1,0 -90,0 "
              fill={4294967295}
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                  "strokeDasharray",
                  "strokeLinecap",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={4282497155}
              strokeDasharray={
                Array [
                  "283",
                  "283",
                ]
              }
              strokeDashoffset={null}
              strokeLinecap={1}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="7"
              vectorEffect={0}
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "position": "absolute",
        }
      }
    >
      <Text
        onPress={[Function]}
        style={
          Object {
            "color": "#333",
            "fontSize": 100,
          }
        }
      >
        1:30
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "position": "relative",
        "top": 140,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 40,
          "marginTop": 10,
        }
      }
    >
      Change time
    </Text>
    <TextInput
      allowFontScaling={true}
      caretHidden={true}
      enablesReturnKeyAutomatically={true}
      keyboardType="number-pad"
      maxLength={3}
      onChangeText={[Function]}
      rejectResponderTermination={true}
      returnKeyType="done"
      style={
        Object {
          "borderWidth": 0,
          "color": "white",
          "fontSize": 50,
          "height": 120,
          "padding": 10,
          "position": "absolute",
          "textAlign": "center",
          "width": 500,
        }
      }
      testID="timerTextInput"
      underlineColorAndroid="transparent"
      value="90"
    />
  </View>
</View>
`;
